package javaapplication3;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Scanner;

  //jugari fix of breaker to be printed 

public class JavaApplication3 {
   
  

 static String readFile() throws IOException
    {
           String  data = new String(Files.readAllBytes(Paths.get("C:\\Users\\Bilal\\Desktop\\test.txt")));
       return data;
    } 
    
   static boolean spacebreaker(char ch ){
       if(ch ==' '){
        return true ;       
}else return false;
    } 
   static boolean punctuatorbreaker(char ch){
       String [] punctuators={";",",","{","}","(",")","[","]"};
 
      
     for(int i =0 ;i<punctuators.length; i ++ )
     {
         if(punctuators[i].equals(String.valueOf(ch) ))
             return true;
                 
                     
     }
     return false;
   }
      static boolean operatorbreaker(char ch){
       String [] operators={"*","/","%","<",">","&&","||","!","=","+","-"};
 
      
     for(int i =0 ;i<operators.length; i ++ )
     {
         if(operators[i].equals(String.valueOf(ch) ))
             return true;
                 
                     
     }
     return false;
   }
      static boolean linechangebreaker(char ch ){
       if(ch == '\n'){
        return true ;       
}else return false;
    }
      
    
            static boolean commentbreaker(char ch){
       String  comment="//";
       String comment1="/";
     if(comment1==(String.valueOf(ch))){
      if(comment==(String.valueOf(ch))){
             return true;
                 
         }    }
     
     return false;
   }
            static boolean digit(char ch){
       String [] digits={"0","1","2","3","4","5","6","7","8","9"};
 
      
     for(int j =0 ;j<digits.length; j++ )
     {
         if(digits[j].equals(String.valueOf(ch) ))
             return true;
                 
                     
     }
     return false;
   }
            
   

  
 
    public static void main(String[] args) throws IOException {
     
     
      ArrayList <String> allChars = new ArrayList();
        
      
String fileInput = readFile();
      
      
      String temp = "";
      
      
      for(int i =0;i<fileInput.length();i++){
          
           if( commentbreaker(fileInput.charAt(i)) == true)
               {
                while(fileInput.charAt(i)!='\n'){
                    i++;
                }
                   
                }
        
       
          
      if( spacebreaker(fileInput.charAt(i)) == true)
               {
                if(temp.length()!=0){
                    allChars.add(temp);
                    temp="";
                   
                }
        }
      if(operatorbreaker(fileInput.charAt(i))==true)
      {
              if(temp.length()!=0){
                    allChars.add(temp);
                    temp="";
                  }
      }
      
      if(punctuatorbreaker(fileInput.charAt(i))==true)
      {
              if(temp.length()!=0){
                    allChars.add(temp);
                    temp="";
                  }
      }
      
           
                  if(linechangebreaker(fileInput.charAt(i))==true)
      {
              if(temp.length()!=0){
                    allChars.add(temp);
                    temp="";
                  }
      }
          
                  
   else if(fileInput.charAt(i)=='.')
              {
                  if(isNumeric(temp)== true) //temphas numbers 
                  {
                     
//                      for(i=0;i>temp.length()-2;i++){
//                          if(temp.charAt(i)=='.')
//                          {allChars.add(temp);
//                    temp="";}    
//                      }
                          
                    temp+= fileInput.charAt(i);
                    
                      }
                  }                  
                          
                           if(digit(fileInput.charAt(i))==true)
      {
          int j=0,k=0;
          
              if(punctuatorbreaker(temp.charAt(j))==true || operatorbreaker(temp.charAt(k)) ){
                  allChars.add(temp);
                       temp="";
                    temp+=fileInput.charAt(i);
                    
              
      }
              else{
              temp+=fileInput.charAt(i);
              }
      }
                         
               
      else{
                
            temp+=fileInput.charAt(i);
            }
    
      }
            
             for(String x : allChars){
                 
      System.out.println(x);
      }
               
               
              
           
   
        
      }

    private static boolean isNumeric(String temp) {
    try {  

        

String someString = temp;
boolean isNumeric = someString.chars().allMatch( Character::isDigit );
        //Integer.parseInt(temp);  
          return true;
  }
    catch(NumberFormatException e){  
    return false;  
  }  
    }
  
      }
    
    

